{"version":3,"file":"static/js/610.fdaee747.chunk.js","mappings":"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","sources":["components/ProductCard/buttons/AddToCartButton.tsx","components/ProductCard/buttons/FavouritesButton.tsx","components/ProductCard/ProductCard.tsx","pages/FavoritesPage/FavoritesPage.tsx","pages/ProductsList/ProductsList.tsx","utils/constants.ts","utils/getCategoryName.ts"],"sourcesContent":["import classNames from 'classnames';\nimport { CartContext, MainContext } from 'context';\nimport { useContext } from 'react';\nimport { Product } from 'types/Product';\n\ninterface Props {\n  styles: string[];\n  product: Product;\n}\n\nexport const AddToCartButton: React.FC<Props> = ({ product, styles }) => {\n  const { saveToCart, cart } = useContext(CartContext);\n  const { darkTheme, notifyCart } = useContext(MainContext);\n\n  const isAddedToCart = cart.some((item) => item.itemId === product.itemId);\n\n  return (\n    <div className=\"cart-button\">\n      <button\n        type=\"button\"\n        className={classNames(styles[0], {\n          [styles[1]]: isAddedToCart,\n          'product__add--dark': darkTheme && isAddedToCart,\n        })}\n        onClick={() => {\n          saveToCart(product);\n          notifyCart();\n        }}\n        disabled={isAddedToCart}\n      >\n        {isAddedToCart ? 'Added to cart' : 'Add to cart'}\n      </button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { MainContext } from 'context/MainContext';\nimport React from 'react';\nimport { Product } from 'types/Product';\n\ninterface Props {\n  product: Product;\n  styles: string[];\n}\n\nexport const FavouritesButton: React.FC<Props> = ({ product, styles }) => {\n  const {\n    products,\n    handleLike,\n    darkTheme,\n    notifyFavs,\n    notifyFavsDelete,\n  } = React.useContext(MainContext);\n\n  const isFav = products.find((curr) => curr.productId === product.productId);\n\n  const isAddedToFavs = isFav !== undefined;\n\n  return (\n    <div className=\"favourites-button\">\n      <button\n        type=\"button\"\n        className={classNames(styles[0], styles[2], {\n          [styles[1]]: isFav,\n          'product__favourites-dark': darkTheme,\n        })}\n        onClick={() => {\n          handleLike(product);\n\n          if (!isAddedToFavs) {\n            notifyFavs();\n          } else {\n            notifyFavsDelete();\n          }\n        }}\n      >\n        <p hidden>add to favourites</p>\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './ProductCard.scss';\nimport { Link } from 'react-router-dom';\nimport { getCategoryName } from 'utils/getCategoryName';\nimport { CAPACITY_ID, CATEGORY_ID } from 'utils/constants';\nimport { Product } from 'types/Product';\nimport { AddToCartButton, FavouritesButton } from './buttons';\n\n// eslint-disable-next-line max-len\nconst CLOUDINARY\n  = 'https://res.cloudinary.com/myfinance/image/upload/v1693416024/syncwave/';\n\ninterface Props {\n  product: Product;\n}\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  return (\n    <li className=\"product\">\n      <div className=\"product__container\">\n        <Link\n          to={`/${getCategoryName(product.category_id, CATEGORY_ID)}/${\n            product.productId\n          }`}\n          relative=\"path\"\n          className=\"product__link\"\n        >\n          <div className=\"product__image-block\">\n            <img\n              src={`${CLOUDINARY}/${product.image}`}\n              alt={product.name}\n              className=\"product__image\"\n            />\n          </div>\n          <h2 className=\"product__title\">{`${product.name} XXXX`}</h2>\n        </Link>\n\n        <div className=\"product__prices\">\n          <p className=\"product__price\">\n            {product.discountPrice\n              ? `$${product.discountPrice}`\n              : `$${product.fullPrice}`}\n          </p>\n          {product.discountPrice && (\n            <p className=\"product__price-full\">{`$${product.fullPrice}`}</p>\n          )}\n        </div>\n\n        <div className=\"product__info\">\n          <div className=\"product__info-block\">\n            <p className=\"product__info-title\">Screen</p>\n            <p className=\"product__info-data\">{product.screen}</p>\n          </div>\n          <div className=\"product__info-block\">\n            <p className=\"product__info-title\">Capacity</p>\n            {product.capacity_id !== undefined\n              ? getCategoryName(product.capacity_id, CAPACITY_ID)\n              : ''}\n          </div>\n          <div className=\"product__info-block\">\n            <p className=\"product__info-title\">RAM</p>\n            <p className=\"product__info-data\">{product.ram}</p>\n          </div>\n        </div>\n\n        <div className=\"product__buttons\">\n          <AddToCartButton\n            product={product}\n            styles={['product__add', 'product__add--active']}\n          />\n          <FavouritesButton\n            product={product}\n            styles={['product__favourites', 'product__favourites--active']}\n          />\n        </div>\n      </div>\n    </li>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { MainContext } from 'context/MainContext';\nimport { ProductsList } from 'pages/ProductsList';\nimport React from 'react';\n\nimport './FavoritesPage.scss';\n\nexport const FavoritesPage: React.FC = () => {\n  const { favProducts, hasErrorOnFav, products }\n    = React.useContext(MainContext);\n\n  return (\n    <div className=\"favourites__page\">\n      <h1 className=\"favourites__title\">Favourites</h1>\n      {/* {!hasErrorOnFav && (\n        <p className=\"favourites__subtitle\">{`${favProducts.length} models`}</p>\n      )}\n      {hasErrorOnFav && (\n        <h2 className=\"favourites__title\">There is some problems</h2>\n      )} */}\n\n      {/* {favProducts.length > 0 && !hasErrorOnFav && (\n        <ProductsList products={favProducts} />\n      )} */}\n\n      {/* commented for testing */}\n\n      <ProductsList products={products} />\n      {/* remove this line when DB is ready */}\n    </div>\n  );\n};\n","import React from 'react';\nimport { ProductCard } from 'components/ProductCard';\nimport './ProductsList.scss';\nimport { Product } from 'types/Product';\n\ninterface Props {\n  products: Product[];\n}\n\nexport const ProductsList: React.FC<Props> = ({ products }) => {\n  return (\n    <section className=\"products\">\n      {products.map((product) => (\n        <ProductCard product={product} key={product.productId} />\n      ))}\n    </section>\n  );\n};\n","export const CAPACITY_ID = {\n  1: '32GB',\n  2: '64GB',\n  3: '128GB',\n  4: '256GB',\n  5: '512GB',\n};\n\nexport const CATEGORY_ID = {\n  1: 'phones',\n  2: 'tablets',\n  3: 'accessories',\n};\n","// eslint-disable-next-line max-len\nexport function getCategoryName(\n  id: number,\n  categories: { [key: number]: string },\n) {\n  return categories[id];\n}\n"],"names":["AddToCartButton","_ref","_classNames","product","styles","_useContext","useContext","CartContext","saveToCart","cart","_useContext2","MainContext","darkTheme","notifyCart","isAddedToCart","some","item","itemId","_jsx","className","children","type","classNames","_defineProperty","onClick","disabled","FavouritesButton","_React$useContext","React","products","handleLike","notifyFavs","notifyFavsDelete","isFav","find","curr","productId","isAddedToFavs","undefined","hidden","ProductCard","_jsxs","Link","to","concat","getCategoryName","category_id","CATEGORY_ID","relative","src","image","alt","name","discountPrice","fullPrice","screen","capacity_id","CAPACITY_ID","ram","FavoritesPage","favProducts","hasErrorOnFav","ProductsList","map","id","categories"],"sourceRoot":""}